{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","map","img","id","title","images","downsized_medium","gifs","GifGridItem","props","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifts","Fragment","GifExpertApp","categories","setCategory","onClick","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sMAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EAEVC,mBAAS,cAFC,mBAEvCC,EAFuC,KAE3BC,EAF2B,KAgB9C,OACI,sBAAMC,SATW,SAACC,GAClBA,EAAEC,iBACCJ,EAAWK,OAAOC,OAAS,IAC1BR,GAAe,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACvCN,EAAc,MAKlB,SACI,uBACIO,KAAK,OACLC,MAAQT,EACRU,SAjBc,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,a,+BCNlBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,4DACJ,mCACTC,EAFa,kDAEqCC,UAAUH,GAF/C,6BACJ,oCADI,SAGAI,MAAMF,GAHN,cAGbG,EAHa,gBAIIA,EAAKC,OAJT,uBAIXC,EAJW,EAIXA,KAJW,UAKAA,EAAKC,KAAI,SAAAC,GACxB,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXT,IAAKO,EAAIG,OAAOC,iBAAiBX,QATtB,eAKbY,EALa,yBAaZA,GAbY,4CAAH,sDCAPC,EAAc,SAAEC,GACzB,OACI,sBAAKC,UAAU,yCAAf,UACI,qBAAKC,IAAMF,EAAMd,IAAMiB,IAAMH,EAAML,QACnC,4BAAKK,EAAML,YCFVS,EAAU,SAAC,GAAkB,IAAhBpB,EAAe,EAAfA,SAAe,ECDZ,SAAEA,GAAe,IAAD,EAEfd,mBAAS,CAC/BqB,KAAM,GACNc,SAAS,IAJ4B,mBAElCC,EAFkC,KAE3BC,EAF2B,KAyBzC,OAlBAC,qBAAU,WAENzB,EAASC,GACRyB,MAAM,SAAAC,GACCH,EAAS,CACLhB,KAAMmB,EACNL,SAAS,SAOtB,IAKIC,EDtBwBK,CAAe3B,GAAlCY,EAFyB,EAE9BL,KAAac,EAFiB,EAEjBA,QAEpB,OACI,eAAC,IAAMO,SAAP,WACI,oBAAIX,UAAU,oCAAd,SAAoDjB,IAEtDqB,GAAW,mBAAGJ,UAAU,mCAAb,qBAET,qBAAKA,UAAU,YAAf,SACI,6BAEQL,EAAOJ,KAAI,SAAAC,GAAG,OACV,cAAC,EAAD,eAAgCA,GAAbA,EAAIC,eEYpCmB,EA1BM,WAAO,IAAD,EAEW3C,mBAAS,CAAC,cAFrB,mBAEhB4C,EAFgB,KAEJC,EAFI,KASvB,OACI,gCACI,8CACA,cAAC,EAAD,CAAa9C,cAAgB8C,IAC7B,uBACA,wBAAQC,QAVI,WAEhBD,GAAY,SAAArC,GAAI,4BAAQA,GAAR,CAAc,sBAQ1B,qBACA,6BAEQoC,EAAWtB,KAAK,SAAAR,GAAQ,OACpB,cAAC,EAAD,CAA0BA,SAAWA,GAAtBA,YCjBvCiC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.18eb92f4.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({ setCategories }) => {\r\n\r\n    const [inputValue, setInputValue] = useState('Hola Mundo');\r\n\r\n    const handleInputChange = (e) => {\r\n        setInputValue(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if(inputValue.trim().length > 2){\r\n            setCategories( cats => [inputValue, ...cats] );\r\n            setInputValue('');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={ handleSubmit }>\r\n            <input\r\n                type=\"text\"\r\n                value={ inputValue }\r\n                onChange={ handleInputChange }\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}","\r\n\r\nexport const getGifs = async( category ) => {\r\n    const apiKey = 'DoYzQVEUIu5PUG1RBM5X9ho5qmUsFao8'\r\n    const url = `https://api.giphy.com/v1/gifs/search?=q=${ encodeURI(category) }&limit=10&api_key=${ apiKey }`;\r\n    const resp = await fetch(url);\r\n    const { data } = await resp.json();\r\n    const gifs = await data.map(img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images.downsized_medium.url\r\n        }\r\n    })\r\n\r\n    return gifs;\r\n}\r\n","import React from 'react'\r\n\r\nexport const GifGridItem = ( props ) => {\r\n    return (\r\n        <div className=\"card animate__animated animate__bounce\">\r\n            <img src={ props.url } alt={ props.title }/>\r\n            <p>{ props.title }</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifts } from '../hooks/useFetchGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({ category }) => {\r\n\r\n    const {data:images, loading} = useFetchGifts( category );\r\n    \r\n    return (\r\n        <React.Fragment>\r\n            <h3 className=\"animate__animated animate__fadeIn\">{ category }</h3>\r\n\r\n        { loading && <p className=\"animate__animated animate__flash\">loading</p>  }\r\n\r\n            <div className=\"card-grid\">\r\n                <ol>\r\n                    {\r\n                        images.map(img => (\r\n                            <GifGridItem key={ img.id } {...img}/>\r\n                        ))\r\n                    }\r\n                </ol>\r\n            </div>\r\n        </React.Fragment>\r\n    )\r\n}\r\n","import { useEffect, useState } from 'react'\r\nimport { getGifs } from '../helpers/getGifs';\r\n\r\nexport const useFetchGifts = ( category ) => {\r\n\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    useEffect(() => {\r\n\r\n        getGifs( category )\r\n        .then( imgs => {\r\n                setState({\r\n                    data: imgs,\r\n                    loading: false\r\n                });\r\n                \r\n\r\n            \r\n        } )\r\n\r\n    }, [])\r\n\r\n    \r\n\r\n\r\n    return state;\r\n} ","import React, { useState } from 'react';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nconst GifExpertApp = () => {\r\n\r\n    const [categories, setCategory] = useState(['One Punch'])\r\n\r\n    const addCategory = () => {\r\n        // setCategory(['HuntedxHunted', ...categories]);\r\n        setCategory(cats => [...cats, 'HunterxHunter']);\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategories={ setCategory }/>\r\n            <hr/>\r\n            <button onClick={ addCategory }>Agregar</button>\r\n            <ol>\r\n                {\r\n                    categories.map( category => (\r\n                        <GifGrid key={ category } category={ category }/>\r\n                    ) )\r\n                }\r\n            </ol>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport GifExpertApp from './GifExpertApp';\n\nReactDOM.render(\n  <React.StrictMode>\n    <GifExpertApp />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}